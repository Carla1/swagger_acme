swagger: '2.0'
info:
  description: 'http://swagger.io'
  version: 1.0.0
  title: Swagger Acme Producer
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: acme.swagger.io
basePath: /v2
tags:
  - name: caixa
    description: Tudo sobre faturas
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: servico
    description: Tudo sobre intalacao
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: usuario
    description: Tudo sobre clientes
    externalDocs:
      description: Find out more about our store
      url: 'http://swagger.io'
  - name: endereco
    description: Tudo sobre endereco
    externalDocs:
      description: Find out more about our store
      url: 'http://swagger.io'
schemes:
  - https
  - http
paths:
  /caixa:
    post:
      tags:
        - caixa
      summary: Adicionar nova fatura
      description: ''
      operationId: addFatura
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Fatura a ser adicionada
          required: true
          schema:
            $ref: '#/definitions/Fatura'
      responses:
        '405':
          description: Invalid input
      security:
        - acme_auth:
            - 'write:acme'
            - 'read:acme'
    put:
      tags:
        - caixa
      summary: Atualiza fatura
      description: ''
      operationId: updateFatura
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Fatura
          required: true
          schema:
            $ref: '#/definitions/Fatura'
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Fatura not found
        '405':
          description: Validation exception
      security:
        - acme_auth:
            - 'write:acme'
            - 'read:acme'
  '/caixa/{faturaId}':
    get:
      tags:
        - caixa
      summary: Fatura por ID
      description: Returns a single pet
      operationId: getFaturaById
      produces:
        - application/xml
        - application/json
      parameters:
        - name: faturaId
          in: path
          description: ID of pet to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Fatura'
        '400':
          description: Invalid ID supplied
        '404':
          description: Fatura not found
      security:
        - api_key: []
    post:
      tags:
        - caixa
      summary: Atualiza fatura
      description: ''
      operationId: updateFaturaWithForm
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/xml
        - application/json
      parameters:
        - name: faturaId
          in: path
          description: Id
          required: true
          type: integer
          format: int64
        - name: codigo
          in: formData
          description: Codigo
          required: false
          type: string
      responses:
        '405':
          description: Invalid input
      security:
        - acme_auth:
            - 'write:acme'
            - 'read:acme'
    delete:
      tags:
        - caixa
      summary: Exclui fatura
      description: ''
      operationId: deleteFatura
      produces:
        - application/xml
        - application/json
      parameters:
        - name: api_key
          in: header
          required: false
          type: string
        - name: faturaId
          in: path
          description: Fatura id to delete
          required: true
          type: integer
          format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Fatura not found
      security:
        - acme_auth:
            - 'write:acme'
            - 'read:acme'
  /servico/instalacao:
    post:
      tags:
        - servico
      summary: Instalacao
      description: ''
      operationId: placeInstalacao
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Instalacao
          required: true
          schema:
            $ref: '#/definitions/Instalacao'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Instalacao'
        '400':
          description: Invalid Instalacao
  '/servico/instalacao/{instalacaoId}':
    get:
      tags:
        - servico
      summary: Find Instalacao by ID
      description: >-
        For valid response try integer IDs with value >= 1 and <= 10.        
        Other values will generated exceptions
      operationId: getInstalacaoById
      produces:
        - application/xml
        - application/json
      parameters:
        - name: instalacaoId
          in: path
          description: ID of pet that needs to be fetched
          required: true
          type: integer
          maximum: 10
          minimum: 1
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Instalacao'
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
    delete:
      tags:
        - servico
      summary: Delete purchase Instalacao by ID
      description: >-
        For valid response try integer IDs with positive integer value.        
        Negative or non-integer values will generate API errors
      operationId: deleteInstalacao
      produces:
        - application/xml
        - application/json
      parameters:
        - name: instalacaoId
          in: path
          description: ID of the Instalacao that needs to be deleted
          required: true
          type: integer
          minimum: 1
          format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Instalacao not found
  /usuario:
    post:
      tags:
        - usuario
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createusuario
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Created user object
          required: true
          schema:
            $ref: '#/definitions/Cliente'
      responses:
        default:
          description: successful operation
  /usuario/createWithArray:
    post:
      tags:
        - usuario
      summary: Creates list of users with given input array
      description: ''
      operationId: createusuariosWithArrayInput
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: List of user object
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Cliente'
      responses:
        default:
          description: successful operation
  /usuario/createWithList:
    post:
      tags:
        - usuario
      summary: Creates list of users with given input array
      description: ''
      operationId: createusuariosWithListInput
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: List of user object
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Cliente'
      responses:
        default:
          description: successful operation
  '/usuario/{nome}':
    get:
      tags:
        - usuario
      summary: Get user by user name
      description: ''
      operationId: getusuarioByName
      produces:
        - application/xml
        - application/json
      parameters:
        - name: nome
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Cliente'
        '400':
          description: Invalid nome supplied
        '404':
          description: usuario not found
    put:
      tags:
        - usuario
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateusuario
      produces:
        - application/xml
        - application/json
      parameters:
        - name: nome
          in: path
          description: name that need to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Updated user object
          required: true
          schema:
            $ref: '#/definitions/Cliente'
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: usuario not found
    delete:
      tags:
        - usuario
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteusuario
      produces:
        - application/xml
        - application/json
      parameters:
        - name: nome
          in: path
          description: The name that needs to be deleted
          required: true
          type: string
      responses:
        '400':
          description: Invalid nome supplied
        '404':
          description: usuario not found
  /endereco:
    post:
      tags:
        - endereco
      summary: Adicionar novo endereco
      description: ''
      operationId: addEndereco
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Endereco a ser adicionado
          required: true
          schema:
            $ref: '#/definitions/Endereco'
      responses:
        '405':
          description: Invalid input
      security:
        - acme_auth:
            - 'write:acme'
            - 'read:acme'
    put:
      tags:
        - endereco
      summary: Atualiza endereco
      description: ''
      operationId: updateEndereco
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Endereco
          required: true
          schema:
            $ref: '#/definitions/Endereco'
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Endereco not found
        '405':
          description: Validation exception
      security:
        - acme_auth:
            - 'write:acme'
            - 'read:acme'
  '/endereco/{enderecoId}':
    get:
      tags:
        - endereco
      summary: Endereco por ID
      description: Returns a single pet
      operationId: getEnderecoById
      produces:
        - application/xml
        - application/json
      parameters:
        - name: enderecoId
          in: path
          description: ID of pet to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Endereco'
        '400':
          description: Invalid ID supplied
        '404':
          description: Fatura not found
      security:
        - api_key: []
    post:
      tags:
        - endereco
      summary: Atualiza endereco
      description: ''
      operationId: updateEnderecoWithForm
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/xml
        - application/json
      parameters:
        - name: enderecoId
          in: path
          description: Id
          required: true
          type: integer
          format: int64
        - name: cidade
          in: formData
          description: cidade
          required: false
          type: string
      responses:
        '405':
          description: Invalid input
      security:
        - acme_auth:
            - 'write:acme'
            - 'read:acme'
    delete:
      tags:
        - endereco
      summary: Exclui endereco
      description: ''
      operationId: deleteEndereco
      produces:
        - application/xml
        - application/json
      parameters:
        - name: api_key
          in: header
          required: false
          type: string
        - name: enderecoId
          in: path
          description: endereco id to delete
          required: true
          type: integer
          format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Endereco not found
      security:
        - acme_auth:
            - 'write:acme'
            - 'read:acme'
securityDefinitions:
  acme_auth:
    type: oauth2
    authorizationUrl: 'http://acme.swagger.io/oauth/dialog'
    flow: implicit
    scopes:
      'write:acme': modificar dados
      'read:acme': ler dados
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  Fatura:
    type: object
    properties:
      id:
        type: integer
        format: int64
      codigo:
        type: string
      numero_leitura:
        type: string
      data_vencimento:
        type: string
        format: date-time
      data_leitura:
        type: string
        format: date-time
      valor_conta:
        type: number
      instalacao:
        $ref: '#/definitions/Instalacao'
    xml:
      name: Fatura
  Endereco:
    type: object
    properties:
      id:
        type: integer
        format: int64
      bairro:
        type: string
      cidade:
        type: string
      logradouro:
        type: string
      numero:
        type: integer
      uf:
        type: string
    xml:
      name: Endereco
  Cliente:
    type: object
    properties:
      id:
        type: integer
        format: int64
      nome:
        type: string
      cpf:
        type: string
      data_nascimento:
        type: string
        format: date-time
      endereco:
        $ref: '#/definitions/Endereco'
    xml:
      name: Cliente
  Instalacao:
    type: object
    properties:
      id:
        type: integer
        format: int64
      codigo:
        type: string
      data_instalacao:
        type: string
        format: date-time
      cliente:
        $ref: '#/definitions/Cliente'
      endereco:
        $ref: '#/definitions/Endereco'
    xml:
      name: Instalacao
